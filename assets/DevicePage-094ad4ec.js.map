{"version":3,"file":"DevicePage-094ad4ec.js","sources":["../../src/utils/api.ts","../../src/views/DevicePage.vue"],"sourcesContent":["import { shallowRef } from 'vue';\nimport { message } from './discrete';\nimport { enhanceFetch } from './fetch';\nimport { cacheStorage } from './storage';\nimport type { Device, RpcError, Snapshot } from './types';\n\nexport const useDeviceApi = (initOrigin?: string) => {\n  const origin = shallowRef(initOrigin);\n  const rpc = async (rpcName: string, query: Record<string, unknown> = {}) => {\n    if (!origin.value) {\n      throw new Error(`origin must exist`);\n    }\n    const u = new URL(`/api/` + rpcName, origin.value);\n    Object.entries(query).forEach(([key, value]) => {\n      if (value === undefined) return;\n      u.searchParams.set(key, String(value));\n    });\n    const response = await enhanceFetch(u).catch((e) => {\n      message.error(`网络错误:/` + rpcName);\n      throw e;\n    });\n    if (!response.ok) {\n      message.error(`接口错误:/` + rpcName + `:` + response.status);\n      throw response;\n    }\n    if (response.headers.get(`Content-Type`)?.includes(`application/json`)) {\n      const error = (await response.clone().json()) as RpcError;\n      if (error.__error) {\n        message.error(error.message);\n        throw response;\n      }\n    }\n    return response;\n  };\n  const jsonRpc = async <T>(...args: Parameters<typeof rpc>) => {\n    const response = await rpc(...args);\n    return (await response.json()) as T;\n  };\n  const blobRpc = async (...args: Parameters<typeof rpc>) => {\n    const response = await rpc(...args);\n    return await response.blob();\n  };\n  const arrayBufferRpc = async (...args: Parameters<typeof rpc>) => {\n    const response = await rpc(...args);\n    return await response.arrayBuffer();\n  };\n  const api = {\n    device: async () => jsonRpc<Device>(`device`),\n    snapshot: async (query?: { id?: string | number }) => {\n      return jsonRpc<Snapshot>(`snapshot`, query);\n    },\n    screenshot: async (query: { id: string | number }) => {\n      return arrayBufferRpc(`screenshot`, query);\n    },\n    captureSnapshot: async () => {\n      return jsonRpc<Snapshot>(`captureSnapshot`);\n    },\n    snapshots: async () => {\n      return jsonRpc<Snapshot[]>(`snapshots`);\n    },\n  };\n  return { origin, api };\n};\n","<script setup lang=\"tsx\">\nimport { useDeviceApi } from '@/utils/api';\nimport { toValidURL } from '@/utils/check';\nimport { message } from '@/utils/discrete';\nimport { errorWrap } from '@/utils/error';\nimport { delay } from '@/utils/others';\nimport { snapshotStorage, screenshotStorage } from '@/utils/storage';\nimport { useSnapshotColumns } from '@/utils/table';\nimport { useBatchTask, useTask } from '@/utils/task';\nimport type { Device, Snapshot } from '@/utils/types';\nimport { useStorage, useTitle } from '@vueuse/core';\nimport {\n  DataTableColumns,\n  NButton,\n  NDataTable,\n  NInput,\n  NInputGroup,\n  NSpace,\n  PaginationProps,\n} from 'naive-ui';\nimport { SortState } from 'naive-ui/es/data-table/src/interface';\nimport pLimit from 'p-limit';\nimport {\n  onMounted,\n  shallowReactive,\n  shallowRef,\n  toRaw,\n  watch,\n  watchEffect,\n} from 'vue';\nimport { useRouter } from 'vue-router';\n\nconst router = useRouter();\nconst title = useTitle(`新设备`);\nconst { api, origin } = useDeviceApi();\nconst link = useStorage(`device_link`, ``);\nconst device = shallowRef<Device>();\nconst connect = useTask(async () => {\n  if (!link.value) return;\n  origin.value = errorWrap(\n    () => new URL(link.value.trim()),\n    () => `非法设备地址`,\n  ).origin;\n  link.value = origin.value;\n  device.value = await api.device();\n});\nonMounted(async () => {\n  await delay(500);\n  if (toValidURL(link.value)) {\n    connect.invoke();\n  }\n});\n\nconst snapshots = shallowRef<Snapshot[]>([]);\nwatchEffect(async () => {\n  if (!device.value) return;\n  title.value = `已连接 ` + device.value.manufacturer;\n  const result = await api.snapshots();\n  result.sort((a, b) => b.id - a.id);\n  snapshots.value = result;\n});\n\nconst captureSnapshot = useTask(async () => {\n  const snapshot = await api.snapshot();\n  const screenshot = await api.screenshot({ id: snapshot.id });\n  message.success(`抓取快照成功`);\n  await snapshotStorage.setItem(snapshot.id, snapshot);\n  await screenshotStorage.setItem(snapshot.id, screenshot);\n  message.success(`保存快照成功`);\n  const result = await api.snapshots();\n  result.sort((a, b) => b.id - a.id);\n  snapshots.value = result;\n});\nconst downloadAllSnapshot = useTask(async () => {\n  const snapshotIds = (await api.snapshots()).map((s) => s.id);\n  const existSnapshotIds = new Set(\n    (await screenshotStorage.keys()).map((s) => parseInt(s)),\n  );\n  const unimportSnapshotIds = snapshotIds.filter(\n    (k) => !existSnapshotIds.has(k),\n  );\n  if (unimportSnapshotIds.length == 0) {\n    message.success(`没有新记录可导入`);\n    return;\n  }\n  let r = 0;\n  const limit = pLimit(3);\n  await Promise.all(\n    unimportSnapshotIds.map((snapshotId) =>\n      limit(async () => {\n        const [newSnapshot, newScreenshot] = await Promise.all([\n          api.snapshot({ id: snapshotId }),\n          api.screenshot({ id: snapshotId }),\n        ] as const);\n        if (!newSnapshot.nodes) return;\n        await Promise.all([\n          snapshotStorage.setItem(snapshotId, newSnapshot),\n          screenshotStorage.setItem(snapshotId, newScreenshot),\n        ]);\n        r++;\n      }),\n    ),\n  );\n  message.success(`导入${r}条新记录`);\n});\n\nconst {\n  activityIdCol,\n  appIdCol,\n  appNameCol,\n  ctimeCol,\n  appVersionCodeCol,\n  appVersionNameCol,\n  reseColWidth,\n} = useSnapshotColumns();\nconst handleSorterChange = (sorter: SortState) => {\n  if (sorter.columnKey == ctimeCol.key) {\n    ctimeCol.sortOrder = sorter.order;\n  }\n};\nconst previewSnapshot = useBatchTask(\n  async (row: Snapshot) => {\n    if (!(await snapshotStorage.hasItem(row.id))) {\n      await snapshotStorage.setItem(row.id, await api.snapshot({ id: row.id }));\n    }\n    if (!(await screenshotStorage.hasItem(row.id))) {\n      const bf = await api.screenshot({ id: row.id });\n      await screenshotStorage.setItem(row.id, bf);\n    }\n    window.open(\n      router.resolve({\n        name: 'snapshot',\n        params: { snapshotId: row.id },\n      }).href,\n    );\n  },\n  (r) => r.id,\n);\n\nconst columns: DataTableColumns<Snapshot> = [\n  ctimeCol,\n  appNameCol,\n  appIdCol,\n  appVersionCodeCol,\n  appVersionNameCol,\n  activityIdCol,\n  {\n    key: `actions`,\n    title: `Action`,\n    fixed: 'right',\n    width: `120px`,\n    render(row) {\n      return (\n        <NSpace size=\"small\">\n          <NButton\n            size=\"small\"\n            loading={previewSnapshot.loading[row.id]}\n            onClick={() => previewSnapshot.invoke(row)}\n          >\n            查看\n          </NButton>\n        </NSpace>\n      );\n    },\n  },\n];\n\nconst pagination = shallowReactive<PaginationProps>({\n  page: 1,\n  pageSize: 50,\n  showSizePicker: true,\n  pageSizes: [50, 100],\n  onChange: (page: number) => {\n    pagination.page = page;\n  },\n  onUpdatePageSize: (pageSize: number) => {\n    pagination.pageSize = pageSize;\n    pagination.page = 1;\n  },\n});\nwatch(pagination, reseColWidth);\n</script>\n<template>\n  <div flex flex-col p-10px gap-10px h-full>\n    <NSpace>\n      <RouterLink to=\"/\">\n        <NButton> 首页 </NButton>\n      </RouterLink>\n      <NInputGroup>\n        <NInput\n          v-model:value=\"link\"\n          placeholder=\"请输入设备地址\"\n          :style=\"{ minWidth: `250px` }\"\n          @keyup.enter=\"connect.invoke\"\n        ></NInput>\n        <NButton ghost @click=\"connect.invoke\" :loading=\"connect.loading\">\n          连接\n        </NButton>\n      </NInputGroup>\n      <template v-if=\"device\">\n        <div class=\"h-full\" flex flex-items-center>\n          {{ `已连接 ${device.manufacturer} Android ${device.release}` }}\n        </div>\n        <NButton\n          ghost\n          @click=\"captureSnapshot.invoke\"\n          :loading=\"captureSnapshot.loading\"\n        >\n          快照\n        </NButton>\n        <NButton\n          ghost\n          @click=\"downloadAllSnapshot.invoke\"\n          :loading=\"downloadAllSnapshot.loading\"\n        >\n          下载设备所有快照\n        </NButton>\n      </template>\n    </NSpace>\n    <NDataTable\n      striped\n      flexHeight\n      :data=\"snapshots\"\n      :columns=\"columns\"\n      :pagination=\"pagination\"\n      @update:sorter=\"handleSorterChange\"\n      size=\"small\"\n      class=\"flex-1\"\n      :scrollX=\"1200\"\n    />\n  </div>\n</template>\n"],"names":["useDeviceApi","initOrigin","origin","shallowRef","rpc","rpcName","query","u","key","value","response","enhanceFetch","e","message","_a","error","jsonRpc","args","arrayBufferRpc","router","useRouter","title","useTitle","api","link","useStorage","device","connect","useTask","errorWrap","URL","trim","onMounted","delay","toValidURL","invoke","snapshots","watchEffect","manufacturer","result","sort","a","b","id","captureSnapshot","snapshot","screenshot","success","snapshotStorage","setItem","screenshotStorage","downloadAllSnapshot","snapshotIds","map","s","existSnapshotIds","Set","keys","parseInt","unimportSnapshotIds","filter","k","has","length","r","limit","pLimit","Promise","all","snapshotId","newSnapshot","newScreenshot","nodes","activityIdCol","appIdCol","appNameCol","ctimeCol","appVersionCodeCol","appVersionNameCol","reseColWidth","useSnapshotColumns","handleSorterChange","sorter","columnKey","sortOrder","order","previewSnapshot","useBatchTask","row","hasItem","bf","window","open","resolve","name","params","href","columns","fixed","width","render","_createVNode2","NSpace","default","NButton","loading","onClick","_createTextVNode2","pagination","shallowReactive","page","pageSize","showSizePicker","pageSizes","onChange","onUpdatePageSize","watch"],"mappings":"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"}