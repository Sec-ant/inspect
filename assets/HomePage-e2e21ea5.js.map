{"version":3,"file":"HomePage-e2e21ea5.js","sources":["../../src/views/HomePage.vue"],"sourcesContent":["<script lang=\"tsx\" setup>\nimport ActionCard from '@/components/ActionCard.vue';\nimport { toValidURL } from '@/utils/check';\nimport { showTextDLg } from '@/utils/dialog';\nimport { dialog } from '@/utils/discrete';\nimport {\n  batchCreatePngUrl,\n  batchCreateZipUrl,\n  batchPngDownloadZip,\n  batchZipDownloadZip,\n} from '@/utils/export';\nimport { importFromLocal, importFromNetwork } from '@/utils/import';\nimport { shallowSnapshotStorage, snapshotStorage } from '@/utils/storage';\nimport { renderDveice, useSnapshotColumns } from '@/utils/table';\nimport { useTask } from '@/utils/task';\nimport type { Snapshot } from '@/utils/types';\nimport { githubUrlToSelfUrl } from '@/utils/url';\nimport {\n  NButton,\n  NDataTable,\n  NInput,\n  NInputGroup,\n  NModal,\n  NPopover,\n  NSpace,\n  PaginationProps,\n  type DataTableColumns,\n} from 'naive-ui';\nimport type { SortState } from 'naive-ui/es/data-table/src/interface';\nimport {\n  computed,\n  reactive,\n  shallowReactive,\n  shallowRef,\n  watch,\n  watchEffect,\n} from 'vue';\nimport { RouterLink } from 'vue-router';\n\nconst snapshots = shallowRef<Snapshot[]>([]);\nconst updateSnapshots = async () => {\n  snapshots.value = (await shallowSnapshotStorage.getAllItems()).reverse();\n  checkedRowKeys.value = [];\n};\nupdateSnapshots();\nconst filterOption = shallowReactive({\n  query: ``,\n  actualQuery: ``,\n  updateQuery: () => {\n    filterOption.actualQuery = filterOption.query.trim();\n    checkedRowKeys.value = [];\n  },\n});\nconst filterSnapshots = computed(() => {\n  const actualQuery = filterOption.actualQuery;\n  if (!actualQuery) return snapshots.value;\n  return snapshots.value.filter((s) => {\n    return (\n      s.appName.includes(actualQuery) ||\n      s.appId.includes(actualQuery) ||\n      s.activityId.includes(actualQuery)\n    );\n  });\n});\n\nconst importLoacl = useTask(async () => {\n  await importFromLocal();\n  await updateSnapshots();\n});\n\nconst {\n  activityIdCol,\n  appIdCol,\n  appNameCol,\n  ctimeCol,\n  deviceCol,\n  appVersionCodeCol,\n  appVersionNameCol,\n  reseColWidth,\n} = useSnapshotColumns();\n\nwatchEffect(() => {\n  const set = filterSnapshots.value.reduce(\n    (p, c) => (p.add(renderDveice(c)), p),\n    new Set<string>(),\n  );\n  if (set.size <= 1) {\n    deviceCol.filterOptions = undefined;\n    return;\n  }\n  deviceCol.filterOptions = [...set.values()].map((s) => ({\n    value: s,\n    label: s,\n  }));\n});\n\nwatchEffect(() => {\n  const set = filterSnapshots.value.reduce(\n    (p, c) => (p.add(c.appName), p),\n    new Set<string>(),\n  );\n  if (set.size <= 1) {\n    appNameCol.filterOptions = undefined;\n    return;\n  }\n  appNameCol.filterOptions = [...set.values()].map((s) => ({\n    value: s,\n    label: s,\n  }));\n});\n\nwatchEffect(() => {\n  const set = filterSnapshots.value.reduce(\n    (p, c) => (p.add(c.activityId), p),\n    new Set<string>(),\n  );\n  if (set.size <= 1) {\n    activityIdCol.filterOptions = undefined;\n    return;\n  }\n  activityIdCol.filterOptions = [...set.values()].map((s) => ({\n    value: s,\n    label: s,\n  }));\n});\n\nconst columns: DataTableColumns<Snapshot> = reactive([\n  {\n    type: 'selection',\n  },\n  ctimeCol,\n  deviceCol,\n  appNameCol,\n  appIdCol,\n  appVersionCodeCol,\n  appVersionNameCol,\n  activityIdCol,\n  {\n    key: `actions`,\n    title: `操作`,\n    fixed: 'right',\n    width: `255px`,\n    render(row) {\n      return <ActionCard snapshot={row} onDelete={updateSnapshots} />;\n    },\n  },\n]);\n\nconst pagination = shallowReactive<PaginationProps>({\n  page: 1,\n  pageSize: 50,\n  showSizePicker: true,\n  pageSizes: [50, 100],\n  onChange: (page: number) => {\n    pagination.page = page;\n  },\n  onUpdatePageSize: (pageSize: number) => {\n    pagination.pageSize = pageSize;\n    pagination.page = 1;\n  },\n});\nwatch(pagination, reseColWidth);\n\nconst handleSorterChange = (sorter: SortState) => {\n  if (sorter.columnKey == ctimeCol.key) {\n    ctimeCol.sortOrder = sorter.order;\n  }\n};\n\nconst showModal = shallowRef(false);\nconst text = shallowRef(``);\nconst importNetwork = useTask(async () => {\n  const urls = text.value\n    .trim()\n    .split(`\\n`)\n    .map((u) => u.trim())\n    .filter((u) => toValidURL(u));\n  if (urls.length == 0) return;\n  await importFromNetwork(urls);\n  await updateSnapshots();\n  text.value = ``;\n});\n\nconst checkedRowKeys = shallowRef<number[]>([]);\nconst checkedSnapshots = () => {\n  return Promise.all(\n    checkedRowKeys.value.map(\n      (id) => snapshotStorage.getItem(id) as Promise<Snapshot>,\n    ),\n  );\n};\nconst batchDelete = useTask(async () => {\n  await new Promise((res, rej) => {\n    dialog.warning({\n      title: `删除`,\n      content: `是否批量删除 ${checkedRowKeys.value.length} 个快照`,\n      negativeText: `取消`,\n      positiveText: `确认`,\n      onClose: rej,\n      onEsc: rej,\n      onMaskClick: rej,\n      onNegativeClick: rej,\n      onPositiveClick: res,\n    });\n  });\n\n  await Promise.all(\n    checkedRowKeys.value.map((k) => snapshotStorage.removeItem(k)),\n  );\n  await updateSnapshots();\n});\nconst batchDownloadPng = useTask(async () => {\n  await batchPngDownloadZip(await checkedSnapshots());\n});\nconst batchDownloadZip = useTask(async () => {\n  await batchZipDownloadZip(await checkedSnapshots());\n});\n\nconst batchSharePngUrl = useTask(async () => {\n  const policiesAssets = await batchCreatePngUrl(await checkedSnapshots());\n  showTextDLg({\n    content:\n      policiesAssets.map((s) => githubUrlToSelfUrl(s.href)).join(`\\n`) + `\\n`,\n  });\n});\nconst batchShareZipUrl = useTask(async () => {\n  const policiesAssets = await batchCreateZipUrl(await checkedSnapshots());\n  showTextDLg({\n    content:\n      policiesAssets.map((s) => githubUrlToSelfUrl(s.href)).join(`\\n`) + `\\n`,\n  });\n});\n</script>\n<template>\n  <NModal\n    v-model:show=\"showModal\"\n    preset=\"dialog\"\n    title=\"导入网络文件\"\n    :showIcon=\"false\"\n    positiveText=\"确认\"\n    negativeText=\"取消\"\n    style=\"width: 800px\"\n    @positiveClick=\"importNetwork.invoke\"\n    :loading=\"importNetwork.loading\"\n  >\n    <NInput\n      :value=\"text\"\n      @update:value=\"\n        if (!importNetwork.loading) {\n          text = $event;\n        }\n      \"\n      type=\"textarea\"\n      :placeholder=\"`请输入文件链接\\n每行一个\\n空白行自动忽略\\n非法链接行自动忽略`\"\n      :autosize=\"{\n        minRows: 8,\n        maxRows: 16,\n      }\"\n      :inputProps=\"{\n        style: `white-space: nowrap;`,\n      }\"\n    />\n  </NModal>\n  <div flex flex-col p-10px gap-10px h-full>\n    <div flex>\n      <NSpace>\n        <NInputGroup>\n          <NInput\n            placeholder=\"请输入关键字搜索\"\n            clearable\n            v-model:value=\"filterOption.query\"\n            @keyup.enter=\"filterOption.updateQuery\"\n            @change=\"filterOption.updateQuery\"\n          ></NInput>\n          <NButton @click=\"filterOption.updateQuery\"> 搜索 </NButton>\n        </NInputGroup>\n        <template v-if=\"checkedRowKeys.length\">\n          <NPopover>\n            <template #trigger>\n              <NButton> 批量下载 </NButton>\n            </template>\n            <NSpace vertical>\n              <NButton\n                @click=\"batchDownloadPng.invoke\"\n                :loading=\"batchDownloadPng.loading\"\n              >\n                批量下载-png\n              </NButton>\n              <NButton\n                @click=\"batchDownloadZip.invoke\"\n                :loading=\"batchDownloadZip.loading\"\n              >\n                批量下载-zip\n              </NButton>\n            </NSpace>\n          </NPopover>\n          <NPopover>\n            <template #trigger>\n              <NButton> 批量分享 </NButton>\n            </template>\n            <NSpace vertical>\n              <NButton\n                @click=\"batchSharePngUrl.invoke\"\n                :loading=\"batchSharePngUrl.loading\"\n              >\n                批量生成链接-png\n              </NButton>\n              <NButton\n                @click=\"batchShareZipUrl.invoke\"\n                :loading=\"batchShareZipUrl.loading\"\n              >\n                批量生成链接-zip\n              </NButton>\n            </NSpace>\n          </NPopover>\n          <NButton @click=\"batchDelete.invoke\"> 批量删除 </NButton>\n          <div h-full flex flex-items-center>\n            {{ `已选中 ${checkedRowKeys.length} 个快照` }}\n          </div>\n        </template>\n      </NSpace>\n      <div flex-1></div>\n      <NSpace>\n        <NPopover>\n          <template #trigger>\n            <NButton> 导入 </NButton>\n          </template>\n          <NSpace vertical>\n            <NButton @click=\"importLoacl.invoke\" :loading=\"importLoacl.loading\">\n              导入本地文件\n            </NButton>\n            <NButton @click=\"showModal = true\" :loading=\"importNetwork.loading\">\n              导入网络文件\n            </NButton>\n          </NSpace>\n        </NPopover>\n        <RouterLink to=\"/device\">\n          <NButton> 去连接设备 </NButton>\n        </RouterLink>\n      </NSpace>\n    </div>\n    <NDataTable\n      striped\n      :data=\"filterSnapshots\"\n      :columns=\"columns\"\n      :scrollX=\"1800\"\n      :pagination=\"pagination\"\n      v-model:checkedRowKeys=\"checkedRowKeys\"\n      :rowKey=\"(r:Snapshot)=>r.id\"\n      @update:sorter=\"handleSorterChange\"\n      size=\"small\"\n      class=\"flex-1\"\n      flexHeight\n    />\n  </div>\n</template>\n"],"names":["snapshots","shallowRef","updateSnapshots","value","shallowSnapshotStorage","getAllItems","reverse","checkedRowKeys","filterOption","shallowReactive","query","actualQuery","updateQuery","trim","filterSnapshots","computed","filter","s","appName","includes","appId","activityId","importLoacl","useTask","importFromLocal","activityIdCol","appIdCol","appNameCol","ctimeCol","deviceCol","appVersionCodeCol","appVersionNameCol","reseColWidth","useSnapshotColumns","watchEffect","set","reduce","p","c","add","renderDveice","Set","size","filterOptions","undefined","values","map","label","columns","reactive","type","key","title","fixed","width","render","row","_createVNode2","ActionCard","pagination","page","pageSize","showSizePicker","pageSizes","onChange","onUpdatePageSize","watch","handleSorterChange","sorter","columnKey","sortOrder","order","showModal","text","importNetwork","urls","split","u","toValidURL","length","importFromNetwork","checkedSnapshots","Promise","all","id","snapshotStorage","getItem","batchDelete","res","rej","dialog","warning","content","negativeText","positiveText","onClose","onEsc","onMaskClick","onNegativeClick","onPositiveClick","k","removeItem","batchDownloadPng","batchPngDownloadZip","batchDownloadZip","batchZipDownloadZip","batchSharePngUrl","policiesAssets","batchCreatePngUrl","showTextDLg","githubUrlToSelfUrl","href","join","batchShareZipUrl","batchCreateZipUrl"],"mappings":"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"}