{"version":3,"file":"storage-5dbc677a.js","sources":["../../node_modules/.pnpm/yocto-queue@1.0.0/node_modules/yocto-queue/index.js","../../node_modules/.pnpm/p-limit@4.0.0/node_modules/p-limit/index.js","../../src/utils/others.ts","../../src/utils/gm.ts","../../src/utils/url.ts","../../src/utils/fetch.ts","../../node_modules/.pnpm/localforage@1.10.0/node_modules/localforage/dist/localforage.js","../../src/utils/storage.ts"],"sourcesContent":["/*\nHow it works:\n`this.#head` is an instance of `Node` which keeps track of its current value and nests another instance of `Node` that keeps the value that comes after it. When a value is provided to `.enqueue()`, the code needs to iterate through `this.#head`, going deeper and deeper to find the last value. However, iterating through every single item is slow. This problem is solved by saving a reference to the last value as `this.#tail` so that it can reference it to add a new value.\n*/\n\nclass Node {\n\tvalue;\n\tnext;\n\n\tconstructor(value) {\n\t\tthis.value = value;\n\t}\n}\n\nexport default class Queue {\n\t#head;\n\t#tail;\n\t#size;\n\n\tconstructor() {\n\t\tthis.clear();\n\t}\n\n\tenqueue(value) {\n\t\tconst node = new Node(value);\n\n\t\tif (this.#head) {\n\t\t\tthis.#tail.next = node;\n\t\t\tthis.#tail = node;\n\t\t} else {\n\t\t\tthis.#head = node;\n\t\t\tthis.#tail = node;\n\t\t}\n\n\t\tthis.#size++;\n\t}\n\n\tdequeue() {\n\t\tconst current = this.#head;\n\t\tif (!current) {\n\t\t\treturn;\n\t\t}\n\n\t\tthis.#head = this.#head.next;\n\t\tthis.#size--;\n\t\treturn current.value;\n\t}\n\n\tclear() {\n\t\tthis.#head = undefined;\n\t\tthis.#tail = undefined;\n\t\tthis.#size = 0;\n\t}\n\n\tget size() {\n\t\treturn this.#size;\n\t}\n\n\t* [Symbol.iterator]() {\n\t\tlet current = this.#head;\n\n\t\twhile (current) {\n\t\t\tyield current.value;\n\t\t\tcurrent = current.next;\n\t\t}\n\t}\n}\n","import Queue from 'yocto-queue';\n\nexport default function pLimit(concurrency) {\n\tif (!((Number.isInteger(concurrency) || concurrency === Number.POSITIVE_INFINITY) && concurrency > 0)) {\n\t\tthrow new TypeError('Expected `concurrency` to be a number from 1 and up');\n\t}\n\n\tconst queue = new Queue();\n\tlet activeCount = 0;\n\n\tconst next = () => {\n\t\tactiveCount--;\n\n\t\tif (queue.size > 0) {\n\t\t\tqueue.dequeue()();\n\t\t}\n\t};\n\n\tconst run = async (fn, resolve, args) => {\n\t\tactiveCount++;\n\n\t\tconst result = (async () => fn(...args))();\n\n\t\tresolve(result);\n\n\t\ttry {\n\t\t\tawait result;\n\t\t} catch {}\n\n\t\tnext();\n\t};\n\n\tconst enqueue = (fn, resolve, args) => {\n\t\tqueue.enqueue(run.bind(undefined, fn, resolve, args));\n\n\t\t(async () => {\n\t\t\t// This function needs to wait until the next microtask before comparing\n\t\t\t// `activeCount` to `concurrency`, because `activeCount` is updated asynchronously\n\t\t\t// when the run function is dequeued and called. The comparison in the if-statement\n\t\t\t// needs to happen asynchronously as well to get an up-to-date value for `activeCount`.\n\t\t\tawait Promise.resolve();\n\n\t\t\tif (activeCount < concurrency && queue.size > 0) {\n\t\t\t\tqueue.dequeue()();\n\t\t\t}\n\t\t})();\n\t};\n\n\tconst generator = (fn, ...args) => new Promise(resolve => {\n\t\tenqueue(fn, resolve, args);\n\t});\n\n\tObject.defineProperties(generator, {\n\t\tactiveCount: {\n\t\t\tget: () => activeCount,\n\t\t},\n\t\tpendingCount: {\n\t\t\tget: () => queue.size,\n\t\t},\n\t\tclearQueue: {\n\t\t\tvalue: () => {\n\t\t\t\tqueue.clear();\n\t\t\t},\n\t\t},\n\t});\n\n\treturn generator;\n}\n","import { message } from './discrete';\n\nexport const obj2form = (...objs: Record<string, unknown>[]) => {\n  const fd = new FormData();\n  objs.forEach((obj) => {\n    for (const k in obj) {\n      const v = obj[k];\n      if (v === undefined) continue;\n      if (v instanceof Blob) {\n        fd.append(k, v, v.name);\n      } else {\n        fd.append(k, String(v));\n      }\n    }\n  });\n  return fd;\n};\n\nexport function obj2usp(...objs: Record<string, unknown>[]) {\n  const usp = new URLSearchParams();\n  objs.forEach((obj) => {\n    for (const k in obj) {\n      const v = obj[k];\n      if (v === undefined) continue;\n      usp.append(k, String(v));\n    }\n  });\n  return usp;\n}\n\nexport const headers2obj = (headers: Headers) => {\n  const h: Record<string, string> = {};\n  headers.forEach((v, k) => {\n    h[k] = v;\n  });\n  return h;\n};\n\nexport const delay = async (n = 0) => {\n  return new Promise<void>((res) => {\n    setTimeout(res, n);\n  });\n};\n\nexport const copy = (() => {\n  let lastText: string | void = void 0;\n  return async (text = ``) => {\n    if (lastText === text) return;\n    lastText = text;\n    delay(10_000).then(() => {\n      lastText = void 0;\n    });\n    await navigator.clipboard.writeText(text);\n    message.success(`复制成功`);\n  };\n})();\n","import { delay } from './others';\nimport { headers2obj } from './others';\n\ntype GmXhrRequest = import('vite-plugin-monkey/dist/client').GmXhrRequest<\n  unknown,\n  'blob'\n>;\nconst proxyFc = <T extends (...args: any[]) => any>(getFc: () => T) => {\n  return ((...args: any[]) => getFc()(...args)) as T;\n};\n\nexport const GM_xmlhttpRequest = proxyFc(\n  () => window.__NetworkExtension__?.GM_xmlhttpRequest,\n);\n\nexport const gmOk = () => {\n  return !!window.__NetworkExtension__?.GM_xmlhttpRequest;\n};\n\n/**\n * https://github.com/github/fetch/blob/fb5b0cf42b470faf8c5448ab461d561f34380a30/fetch.js#L422\n */\nexport const parseHeaders = (rawHeaders = '') => {\n  const headers = new Headers();\n  // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n  // https://tools.ietf.org/html/rfc7230#section-3.2\n  const preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n  // Avoiding split via regex to work around a common IE11 bug with the core-js 3.6.0 regex polyfill\n  // https://github.com/github/fetch/issues/748\n  // https://github.com/zloirock/core-js/issues/751\n  preProcessedHeaders\n    .split('\\r')\n    .map(function (header) {\n      return header.startsWith(`\\n`) ? header.substring(1) : header;\n    })\n    .forEach(function (line) {\n      let parts = line.split(':');\n      let key = parts.shift()?.trim();\n      if (key) {\n        let value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n  return headers;\n};\n\n/**\n * https://github.com/github/fetch/blob/9a6d748b394a2c16b250262fcaf46afd5364b415/fetch.js#L555\n */\nconst fixUrl = (url = '') => {\n  try {\n    return url === '' && location.href ? location.href : url;\n  } catch {\n    return url;\n  }\n};\n\n/**\n * simulate window.fetch with GM_xmlhttpRequest\n *\n * because [Request](https://developer.mozilla.org/en-US/docs/Web/API/Request) will delete [Forbidden_header_name](https://developer.mozilla.org/en-US/docs/Glossary/Forbidden_header_name)\n *\n * so you must manually modify these headers by set the second parameter of GM_fetch\n * @example\n * GM_fetch(\n *   new Request('https://www.pixiv.net/', {\n *     headers: { referer: 'https://www.pixiv.net/' }, // it will not work !!!\n *   }),\n * );\n * GM_fetch(new Request('https://www.pixiv.net/'), {\n *   headers: { referer: 'https://www.pixiv.net/' }, // it will work\n *   headers: new Headers({ referer: 'https://www.pixiv.net/' }), // it will also work\n * });\n */\nexport const GM_fetch = async (\n  input: RequestInfo | URL,\n  init: RequestInit = {},\n  xhrDetails:\n    | Partial<GmXhrRequest>\n    | ((arg: GmXhrRequest) => GmXhrRequest) = {},\n): Promise<Response> => {\n  const request = new Request(input, init).clone();\n  if (request.signal?.aborted) {\n    throw new DOMException('Aborted', 'AbortError');\n  }\n\n  const method = request.method.toUpperCase();\n  const url = fixUrl(request.url);\n\n  // headers\n  const sendHeaders = new Headers(request.headers);\n  new Headers(init.headers).forEach((value, key) => {\n    sendHeaders.set(key, value);\n  });\n\n  let binary = false;\n  let data: URLSearchParams | FormData | Blob | string | undefined = undefined;\n\n  if (method != 'GET') {\n    if (init.body) {\n      if (\n        typeof init.body == 'string' ||\n        init.body instanceof URLSearchParams\n      ) {\n        data = init.body;\n      } else if (init.body instanceof FormData) {\n        data = init.body;\n        sendHeaders.delete(`content-type`);\n      } else {\n        binary = true;\n        data = await request.blob();\n      }\n    }\n  }\n  return new Promise<Response>((resolve, reject) => {\n    let initXhrDetails: GmXhrRequest = {\n      method,\n      url,\n      headers: headers2obj(sendHeaders),\n      data,\n      binary,\n      responseType: 'blob',\n      async onload(e) {\n        let body: BodyInit | null | undefined = undefined;\n        if (!(e.response instanceof Blob && e.response.size == 0)) {\n          // Response': Response with null body status cannot have body\n          body = e.response ?? e.responseText;\n        }\n        await delay();\n        const resp = new Response(body, {\n          status: e.status,\n          statusText: e.statusText,\n          headers: parseHeaders(e.responseHeaders),\n        });\n        Object.defineProperty(resp, 'url', { value: e.finalUrl });\n        resolve(resp);\n      },\n      async onerror() {\n        await delay();\n        reject(new TypeError('Network request onerror failed'));\n      },\n      async ontimeout() {\n        await delay();\n        reject(new TypeError('Network request ontimeout failed'));\n      },\n      async onabort() {\n        await delay();\n        reject(new DOMException('Aborted', 'AbortError'));\n      },\n      async onreadystatechange(response) {\n        if (response.readyState === 4) {\n          request.signal?.removeEventListener('abort', abortXhr);\n        }\n      },\n    };\n    if (typeof xhrDetails == 'function') {\n      initXhrDetails = xhrDetails(initXhrDetails);\n    } else {\n      initXhrDetails = { ...initXhrDetails, ...xhrDetails };\n    }\n    const handle = GM_xmlhttpRequest(initXhrDetails);\n    function abortXhr() {\n      handle.abort();\n    }\n    request.signal?.addEventListener('abort', abortXhr);\n  });\n};\n","const corsOkOrigins = new Set([\n  location.origin,\n  `https://cdn.jsdelivr.net`,\n  `https://fastly.jsdelivr.net`,\n  `https://raw.githubusercontent.com`,\n  `https://raw.githubusercontents.com`,\n  `https://raw.gitmirror.com`,\n]);\n\nexport const isAllowCorsUrl = (u: string | URL) => {\n  return corsOkOrigins.has(new URL(u).origin);\n};\n","import { GM_fetch, gmOk } from './gm';\nimport store from './store';\nimport { isAllowCorsUrl } from './url';\n\nexport const enhanceFetch = async (\n  input: RequestInfo | URL,\n  init?: RequestInit,\n) => {\n  const u = new URL(new Request(input).url);\n  if (isAllowCorsUrl(u)) return fetch(input, init);\n\n  if (gmOk()) {\n    // with cookie\n    // export snapshot need\n    return GM_fetch(input, init);\n  } else {\n    store.networkErrorDlgVisible = true;\n    throw new Error(`gm is not supported`);\n  }\n};\n","/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","import localforage from 'localforage';\nimport { reactive, toRaw, watch } from 'vue';\nimport type { GithubPoliciesAsset } from './github';\nimport { Snapshot } from './types';\n\nconst useStorage = <T>(options: LocalForageOptions = {}) => {\n  options.driver ??= localforage.INDEXEDDB;\n  const storage = localforage.createInstance(options);\n  const setItem = async (key: string | number, value: T) => {\n    return storage.setItem(key.toString(), value);\n  };\n  const getItem = async (key: string | number) => {\n    return storage.getItem<T>(key.toString());\n  };\n  const getAllItems = async (): Promise<T[]> => {\n    return Promise.all(\n      (await storage.keys()).map((k) => storage.getItem(k) as Promise<T>),\n    );\n  };\n  const removeItem = async (key: string | number) => {\n    return storage.removeItem(key.toString());\n  };\n\n  const hasItem = async (key: string | number) => {\n    const keyStr = key.toString();\n    return storage.keys().then((r) => r.includes(keyStr));\n  };\n  const keys = async () => {\n    return storage.keys();\n  };\n\n  return {\n    keys,\n    hasItem,\n    getItem,\n    setItem,\n    removeItem,\n    getAllItems,\n  };\n};\n\nconst useReactiveStorage = <T extends object>(\n  key: string,\n  initialValue: (() => T) | T,\n) => {\n  const store = reactive<T>(\n    typeof initialValue == 'function' ? initialValue() : initialValue,\n  );\n  let storeInited = false;\n  watch(store, async () => {\n    if (!storeInited) return;\n    await localforage.setItem(key, toRaw(store));\n  });\n  localforage.getItem(key).then((r) => {\n    r && Object.assign(store, r);\n    storeInited = true;\n  });\n  return store;\n};\n\nexport const snapshotStorage = useStorage<Snapshot>({\n  name: `snapshot`,\n  version: 1,\n});\n\nconst snapshotSetItem = snapshotStorage.setItem;\nsnapshotStorage.setItem = async (key, value) => {\n  const shallowValue = { ...value, nodes: [] };\n  await shallowSnapshotStorage.setItem(key, shallowValue);\n  return snapshotSetItem(key, value);\n};\n\nconst snapshotRemoveItem = snapshotStorage.removeItem;\nsnapshotStorage.removeItem = async (key) => {\n  await Promise.all([\n    snapshotRemoveItem(key),\n    shallowSnapshotStorage.removeItem(key),\n    screenshotStorage.removeItem(key),\n  ]);\n};\n\nexport const shallowSnapshotStorage = useStorage<Snapshot>({\n  name: `shallowSnapshot`,\n  version: 1,\n});\n\nexport const screenshotStorage = useStorage<ArrayBuffer>({\n  name: `screenshot`,\n  version: 1,\n});\n\nexport const setSnapshot = async (snapshot: Snapshot, bf: ArrayBuffer) => {\n  await snapshotStorage.setItem(snapshot.id, snapshot);\n  await screenshotStorage.setItem(snapshot.id, bf);\n};\n\nexport const cacheStorage = useStorage({\n  name: `cache`,\n  version: 1,\n});\n\nexport const urlStorage = useReactiveStorage<Record<string, number>>(`url`, {});\n\nexport const githubPngStorage = useReactiveStorage<\n  Record<number, GithubPoliciesAsset>\n>(`githubPng`, {});\n\nexport const githubZipStorage = useReactiveStorage<\n  Record<number, GithubPoliciesAsset>\n>(`githubZip`, {});\n"],"names":["Node","value","Queue","__privateAdd","_head","_tail","_size","node","__privateGet","__privateSet","__privateWrapper","current","pLimit","concurrency","queue","activeCount","next","run","fn","resolve","args","result","enqueue","generator","obj2form","objs","fd","obj","k","v","headers2obj","headers","h","delay","n","res","copy","lastText","text","message","proxyFc","getFc","GM_xmlhttpRequest","_a","gmOk","parseHeaders","rawHeaders","header","line","parts","key","fixUrl","url","GM_fetch","input","init","xhrDetails","request","method","sendHeaders","binary","data","reject","initXhrDetails","e","body","resp","response","abortXhr","handle","corsOkOrigins","isAllowCorsUrl","u","enhanceFetch","store","f","module","t","r","s","o","a","require","i","l","_dereq_","exports","global","Mutation","scheduleDrain","called","observer","nextTick","element","channel","scriptEl","draining","oldQueue","len","immediate","task","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","Promise","resolver","safelyResolveThenable","onRejected","onFulfilled","promise","unwrap","QueueItem","func","returnValue","self","tryCatch","getThen","thenable","error","then","onError","onSuccess","tryToUnwrap","out","reason","all","iterable","values","resolved","allResolver","resolveFromAll","outValue","race","_typeof","_classCallCheck","instance","Constructor","getIDB","idb","isIndexedDBValid","isSafari","hasFetch","createBlob","properties","Builder","builder","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","toString","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","length","buf","arr","_checkBlobSupportWithoutCaching","txn","blob","matchedChrome","matchedEdge","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","_advanceReadiness","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","dbArgs","openreq","db","ex","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","base64","_decodeBlob","encodedBlob","arrayBuff","_isEncodedBlob","_fullyReady","_tryReconnect","forages","forage","createTransaction","mode","retries","tx","_initStorage","options","initPromises","ignoreErrors","j","getItem","transaction","req","iterate","iterator","iterationNumber","cursor","setItem","blobSupport","removeItem","clear","advanced","keys","dropInstance","currentConfig","isCurrentDb","dbPromise","newVersion","dropObjectPromise","_forage2","dropDBPromise","_forage","asyncStorage","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","bufferLength","p","encoded1","encoded2","encoded3","encoded4","buffer","bytes","bufferToString","base64String","serialize","valueType","marker","fileReader","str","deserialize","type","blobType","matcher","localforageSerializer","createDbTable","_initStorage$1","dbInfoPromise","tryExecuteSql","sqlStatement","results","getItem$1","iterate$1","rows","item","_setItem","retriesLeft","originalValue","sqlError","setItem$1","removeItem$1","clear$1","length$1","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","storeName","operations","webSQLStorage","isLocalStorageValid","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","DefaultConfig","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","LocalForage","driverTypeKey","driver","driverName","driverObject","complianceError","driverMethods","driverMethodName","isRequired","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","getDriverPromise","serializerPromise","drivers","supportedDrivers","setDriverToConfig","extendSelfWithDriver","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","libraryMethodsAndProperties","localforage_js","useStorage","localforage","storage","keyStr","useReactiveStorage","initialValue","reactive","storeInited","watch","toRaw","snapshotStorage","snapshotSetItem","shallowValue","shallowSnapshotStorage","snapshotRemoveItem","screenshotStorage","setSnapshot","snapshot","bf","urlStorage","githubPngStorage","githubZipStorage"],"mappings":"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","x_google_ignoreList":[0,1,6]}